ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 434F4D20 		.ascii	"COM Port Open\000"
  21      506F7274 
  21      204F7065 
  21      6E00
  22 000e 0000     		.align	2
  23              	.LC1:
  24 0010 4F766572 		.ascii	"Overall: %ld mV\015\012\000"
  24      616C6C3A 
  24      20256C64 
  24      206D560D 
  24      0A00
  25 0022 0000     		.align	2
  26              	.LC2:
  27 0024 50726F64 		.ascii	"Production: %ld mV\015\012\000"
  27      75637469 
  27      6F6E3A20 
  27      256C6420 
  27      6D560D0A 
  28 0039 000000   		.align	2
  29              	.LC3:
  30 003c 4670756D 		.ascii	"Fpump: %ld mV\015\012\000"
  30      703A2025 
  30      6C64206D 
  30      560D0A00 
  31              		.align	2
  32              	.LC4:
  33 004c 46696E6A 		.ascii	"Finj: %ld mV\015\012\000"
  33      3A20256C 
  33      64206D56 
  33      0D0A00
  34 005b 00       		.align	2
  35              	.LC5:
  36 005c 49676E69 		.ascii	"Ignition: %ld mV\015\012\000"
  36      74696F6E 
  36      3A20256C 
  36      64206D56 
  36      0D0A00
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 2


  37 006f 00       		.align	2
  38              	.LC6:
  39 0070 52656656 		.ascii	"RefV: %ld mV\015\012\012\012\012\012\012\015\000"
  39      3A20256C 
  39      64206D56 
  39      0D0A0A0A 
  39      0A0A0A0D 
  40 0085 000000   		.align	2
  41              	.LC7:
  42 0088 456D756C 		.ascii	"Emulated Data: %x \015\012\000"
  42      61746564 
  42      20446174 
  42      613A2025 
  42      78200D0A 
  43 009d 000000   		.section	.text.main,"ax",%progbits
  44              		.align	2
  45              		.global	main
  46              		.thumb
  47              		.thumb_func
  48              		.type	main, %function
  49              	main:
  50              	.LFB63:
  51              		.file 1 ".\\main.c"
   1:.\main.c      **** /******************************************************************************
   2:.\main.c      **** * Project Name		: VTM16 Current Sensors
   3:.\main.c      **** * File Name			: main.c
   4:.\main.c      **** * Version 			: **
   5:.\main.c      **** * Device Used		: CY8C5888LTI-LP097
   6:.\main.c      **** * Software Used		: PSoC Creator 3.1 SP2
   7:.\main.c      **** * Compiler    		: ARM GCC 4.8.4, ARM RVDS Generic, ARM MDK Generic
   8:.\main.c      **** * Related Hardware	: CY8CKIT059 PSoC 5 LP Prototyping Kit 
   9:.\main.c      **** *******************************************************************************/
  10:.\main.c      **** 
  11:.\main.c      **** #include <device.h>
  12:.\main.c      **** #include "stdio.h"
  13:.\main.c      **** 
  14:.\main.c      **** /* Project Defines */
  15:.\main.c      **** #define FALSE  0
  16:.\main.c      **** #define TRUE   1
  17:.\main.c      **** #define TRANSMIT_BUFFER_SIZE  16
  18:.\main.c      **** #define I2C_BUFFER_SIZE 0x0C
  19:.\main.c      **** #define I2C_RW_AREA_SIZE 0x00
  20:.\main.c      **** 
  21:.\main.c      **** 
  22:.\main.c      **** //Need to use ezi2c_get_activity to develop a mechanism for data coherency
  23:.\main.c      **** //Only write to buffer if it is not busy
  24:.\main.c      **** void main()
  25:.\main.c      **** {
  52              		.loc 1 25 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 80
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 94B0     		sub	sp, sp, #80
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 3


  61              		.cfi_def_cfa_offset 88
  62 0004 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  26:.\main.c      ****     /* Variable to store ADC result */
  27:.\main.c      ****     int16 Output;
  28:.\main.c      ****     int32 data[6];
  29:.\main.c      ****     int8 lowByte[6];
  30:.\main.c      ****     int8 highByte[6];
  31:.\main.c      ****     /* Variable to store UART received character */
  32:.\main.c      ****     uint8 Ch;
  33:.\main.c      ****     /* Variable used to send emulated data */
  34:.\main.c      ****     uint8 EmulatedData;
  35:.\main.c      ****     /* Flags used to store transmit data commands */
  36:.\main.c      ****     uint8 ContinuouslySendData;
  37:.\main.c      ****     uint8 SendSingleByte;
  38:.\main.c      ****     uint8 SendEmulatedData;
  39:.\main.c      ****     //Set Up i2c variables
  40:.\main.c      ****     uint8 i2cBuffer[I2C_BUFFER_SIZE];
  41:.\main.c      ****     uint8 tempStatus;
  42:.\main.c      ****     /* Transmit Buffer */
  43:.\main.c      ****     char TransmitBuffer[TRANSMIT_BUFFER_SIZE];
  44:.\main.c      ****     
  45:.\main.c      ****     
  46:.\main.c      ****     int i;
  47:.\main.c      ****     /* Start the components */
  48:.\main.c      ****     ADC_SAR_Seq_1_Start();
  64              		.loc 1 48 0
  65 0006 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
  49:.\main.c      ****     UART_1_Start();
  66              		.loc 1 49 0
  67 000a FFF7FEFF 		bl	UART_1_Start
  50:.\main.c      ****     EZI2C_1_Start();
  68              		.loc 1 50 0
  69 000e FFF7FEFF 		bl	EZI2C_1_Start
  51:.\main.c      ****     EZI2C_1_SetBuffer1(I2C_BUFFER_SIZE, I2C_RW_AREA_SIZE, i2cBuffer); 
  70              		.loc 1 51 0
  71 0012 07F11003 		add	r3, r7, #16
  72 0016 0C20     		movs	r0, #12
  73 0018 0021     		movs	r1, #0
  74 001a 1A46     		mov	r2, r3
  75 001c FFF7FEFF 		bl	EZI2C_1_SetBuffer1
  52:.\main.c      ****     
  53:.\main.c      ****     /* Initialize Variables */
  54:.\main.c      ****     ContinuouslySendData = FALSE;
  76              		.loc 1 54 0
  77 0020 0023     		movs	r3, #0
  78 0022 87F84E30 		strb	r3, [r7, #78]
  55:.\main.c      ****     SendSingleByte = FALSE;
  79              		.loc 1 55 0
  80 0026 0023     		movs	r3, #0
  81 0028 87F84D30 		strb	r3, [r7, #77]
  56:.\main.c      ****     SendEmulatedData = FALSE;
  82              		.loc 1 56 0
  83 002c 0023     		movs	r3, #0
  84 002e 87F84C30 		strb	r3, [r7, #76]
  57:.\main.c      ****     EmulatedData = 0;
  85              		.loc 1 57 0
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 4


  86 0032 0023     		movs	r3, #0
  87 0034 87F84F30 		strb	r3, [r7, #79]
  58:.\main.c      ****     
  59:.\main.c      ****     /* Start the ADC conversion */
  60:.\main.c      ****     ADC_SAR_Seq_1_StartConvert();
  88              		.loc 1 60 0
  89 0038 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
  61:.\main.c      ****     
  62:.\main.c      ****     /* Send message to verify COM port is connected properly */
  63:.\main.c      ****     UART_1_PutString("COM Port Open");
  90              		.loc 1 63 0
  91 003c 8548     		ldr	r0, .L21
  92 003e FFF7FEFF 		bl	UART_1_PutString
  93              	.L19:
  64:.\main.c      ****     
  65:.\main.c      ****     for(;;)
  66:.\main.c      ****     {        
  67:.\main.c      ****         /* Non-blocking call to get the latest data recieved  */
  68:.\main.c      ****         Ch = UART_1_GetChar();
  94              		.loc 1 68 0
  95 0042 FFF7FEFF 		bl	UART_1_GetChar
  96 0046 0346     		mov	r3, r0
  97 0048 87F84730 		strb	r3, [r7, #71]
  69:.\main.c      ****         
  70:.\main.c      ****         /* Set flags based on UART command */
  71:.\main.c      ****         switch(Ch)
  98              		.loc 1 71 0
  99 004c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 100 0050 582B     		cmp	r3, #88
 101 0052 21D0     		beq	.L3
 102 0054 582B     		cmp	r3, #88
 103 0056 0BDC     		bgt	.L4
 104 0058 432B     		cmp	r3, #67
 105 005a 15D0     		beq	.L5
 106 005c 432B     		cmp	r3, #67
 107 005e 02DC     		bgt	.L6
 108 0060 002B     		cmp	r3, #0
 109 0062 21D0     		beq	.L20
  72:.\main.c      ****         {
  73:.\main.c      ****             case 0:
  74:.\main.c      ****                 /* No new data was recieved */
  75:.\main.c      ****                 break;
  76:.\main.c      ****             case 'C':
  77:.\main.c      ****             case 'c':
  78:.\main.c      ****                 SendSingleByte = TRUE;
  79:.\main.c      ****                 break;
  80:.\main.c      ****             case 'S':
  81:.\main.c      ****             case 's':
  82:.\main.c      ****                 ContinuouslySendData = TRUE;
  83:.\main.c      ****                 break;
  84:.\main.c      ****             case 'X':
  85:.\main.c      ****             case 'x':
  86:.\main.c      ****                 ContinuouslySendData = FALSE;
  87:.\main.c      ****                 break;
  88:.\main.c      ****             case 'E':
  89:.\main.c      ****             case 'e':
  90:.\main.c      ****                 SendEmulatedData = TRUE;
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 5


  91:.\main.c      ****                 break;
  92:.\main.c      ****             default:
  93:.\main.c      ****                 /* Place error handling code here */
  94:.\main.c      ****                 break;    
 110              		.loc 1 94 0
 111 0064 21E0     		b	.L11
 112              	.L6:
  71:.\main.c      ****         {
 113              		.loc 1 71 0
 114 0066 452B     		cmp	r3, #69
 115 0068 1AD0     		beq	.L8
 116 006a 532B     		cmp	r3, #83
 117 006c 10D0     		beq	.L9
 118              		.loc 1 94 0
 119 006e 1CE0     		b	.L11
 120              	.L4:
  71:.\main.c      ****         {
 121              		.loc 1 71 0
 122 0070 652B     		cmp	r3, #101
 123 0072 15D0     		beq	.L8
 124 0074 652B     		cmp	r3, #101
 125 0076 02DC     		bgt	.L10
 126 0078 632B     		cmp	r3, #99
 127 007a 05D0     		beq	.L5
 128              		.loc 1 94 0
 129 007c 15E0     		b	.L11
 130              	.L10:
  71:.\main.c      ****         {
 131              		.loc 1 71 0
 132 007e 732B     		cmp	r3, #115
 133 0080 06D0     		beq	.L9
 134 0082 782B     		cmp	r3, #120
 135 0084 08D0     		beq	.L3
 136              		.loc 1 94 0
 137 0086 10E0     		b	.L11
 138              	.L5:
  78:.\main.c      ****                 break;
 139              		.loc 1 78 0
 140 0088 0123     		movs	r3, #1
 141 008a 87F84D30 		strb	r3, [r7, #77]
  79:.\main.c      ****             case 'S':
 142              		.loc 1 79 0
 143 008e 0CE0     		b	.L11
 144              	.L9:
  82:.\main.c      ****                 break;
 145              		.loc 1 82 0
 146 0090 0123     		movs	r3, #1
 147 0092 87F84E30 		strb	r3, [r7, #78]
  83:.\main.c      ****             case 'X':
 148              		.loc 1 83 0
 149 0096 08E0     		b	.L11
 150              	.L3:
  86:.\main.c      ****                 break;
 151              		.loc 1 86 0
 152 0098 0023     		movs	r3, #0
 153 009a 87F84E30 		strb	r3, [r7, #78]
  87:.\main.c      ****             case 'E':
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 6


 154              		.loc 1 87 0
 155 009e 04E0     		b	.L11
 156              	.L8:
  90:.\main.c      ****                 break;
 157              		.loc 1 90 0
 158 00a0 0123     		movs	r3, #1
 159 00a2 87F84C30 		strb	r3, [r7, #76]
  91:.\main.c      ****             default:
 160              		.loc 1 91 0
 161 00a6 00E0     		b	.L11
 162              	.L20:
  75:.\main.c      ****             case 'C':
 163              		.loc 1 75 0
 164 00a8 00BF     		nop
 165              	.L11:
  95:.\main.c      ****         }
  96:.\main.c      ****         
  97:.\main.c      ****         /* Check to see if an ADC conversion has completed */
  98:.\main.c      ****         //At some point should switch to interrupts
  99:.\main.c      ****         if(ADC_SAR_Seq_1_IsEndConversion(ADC_SAR_Seq_1_RETURN_STATUS))
 166              		.loc 1 99 0
 167 00aa 0120     		movs	r0, #1
 168 00ac FFF7FEFF 		bl	ADC_SAR_Seq_1_IsEndConversion
 169 00b0 0346     		mov	r3, r0
 170 00b2 002B     		cmp	r3, #0
 171 00b4 00F0CC80 		beq	.L12
 100:.\main.c      ****         {
 101:.\main.c      ****             /* Use the GetResult16 API to get an 8 bit unsigned result in
 102:.\main.c      ****              * single ended mode.  The API CountsTo_mVolts is then used
 103:.\main.c      ****              * to convert the ADC counts into mV before transmitting via
 104:.\main.c      ****              * the UART.  See the datasheet API description for more
 105:.\main.c      ****              * details */
 106:.\main.c      ****             i = 0;
 172              		.loc 1 106 0
 173 00b8 0023     		movs	r3, #0
 174 00ba BB64     		str	r3, [r7, #72]
 107:.\main.c      ****             for(i = 0;i<6;i++)
 175              		.loc 1 107 0
 176 00bc 0023     		movs	r3, #0
 177 00be BB64     		str	r3, [r7, #72]
 178 00c0 34E0     		b	.L13
 179              	.L14:
 108:.\main.c      ****             {
 109:.\main.c      ****             Output = ADC_SAR_Seq_1_GetResult16(i);
 180              		.loc 1 109 0 discriminator 3
 181 00c2 BB6C     		ldr	r3, [r7, #72]
 182 00c4 9BB2     		uxth	r3, r3
 183 00c6 1846     		mov	r0, r3
 184 00c8 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 185 00cc 0346     		mov	r3, r0
 186 00ce A7F84430 		strh	r3, [r7, #68]	@ movhi
 110:.\main.c      ****             data[i] = ADC_SAR_Seq_1_CountsTo_mVolts(Output);
 187              		.loc 1 110 0 discriminator 3
 188 00d2 B7F94430 		ldrsh	r3, [r7, #68]
 189 00d6 1846     		mov	r0, r3
 190 00d8 FFF7FEFF 		bl	ADC_SAR_Seq_1_CountsTo_mVolts
 191 00dc 0246     		mov	r2, r0
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 7


 192 00de BB6C     		ldr	r3, [r7, #72]
 193 00e0 9B00     		lsls	r3, r3, #2
 194 00e2 07F15001 		add	r1, r7, #80
 195 00e6 0B44     		add	r3, r3, r1
 196 00e8 43F8242C 		str	r2, [r3, #-36]
 111:.\main.c      ****             lowByte[i] = (data[i] & 0xFF);
 197              		.loc 1 111 0 discriminator 3
 198 00ec BB6C     		ldr	r3, [r7, #72]
 199 00ee 9B00     		lsls	r3, r3, #2
 200 00f0 07F15002 		add	r2, r7, #80
 201 00f4 1344     		add	r3, r3, r2
 202 00f6 53F8243C 		ldr	r3, [r3, #-36]
 203 00fa D9B2     		uxtb	r1, r3
 204 00fc 07F12402 		add	r2, r7, #36
 205 0100 BB6C     		ldr	r3, [r7, #72]
 206 0102 1344     		add	r3, r3, r2
 207 0104 0A46     		mov	r2, r1
 208 0106 1A70     		strb	r2, [r3]
 112:.\main.c      ****             highByte[i] = (0xFF & (data[i] >> 8));            
 209              		.loc 1 112 0 discriminator 3
 210 0108 BB6C     		ldr	r3, [r7, #72]
 211 010a 9B00     		lsls	r3, r3, #2
 212 010c 07F15002 		add	r2, r7, #80
 213 0110 1344     		add	r3, r3, r2
 214 0112 53F8243C 		ldr	r3, [r3, #-36]
 215 0116 1B12     		asrs	r3, r3, #8
 216 0118 D9B2     		uxtb	r1, r3
 217 011a 07F11C02 		add	r2, r7, #28
 218 011e BB6C     		ldr	r3, [r7, #72]
 219 0120 1344     		add	r3, r3, r2
 220 0122 0A46     		mov	r2, r1
 221 0124 1A70     		strb	r2, [r3]
 107:.\main.c      ****             {
 222              		.loc 1 107 0 discriminator 3
 223 0126 BB6C     		ldr	r3, [r7, #72]
 224 0128 0133     		adds	r3, r3, #1
 225 012a BB64     		str	r3, [r7, #72]
 226              	.L13:
 107:.\main.c      ****             {
 227              		.loc 1 107 0 is_stmt 0 discriminator 1
 228 012c BB6C     		ldr	r3, [r7, #72]
 229 012e 052B     		cmp	r3, #5
 230 0130 C7DD     		ble	.L14
 113:.\main.c      ****             }
 114:.\main.c      ****             //Need to split data into 12 individual bytes for storage in the i2c transmit buffer
 115:.\main.c      **** 
 116:.\main.c      ****             tempStatus = EZI2C_1_GetActivity(); 
 231              		.loc 1 116 0 is_stmt 1
 232 0132 FFF7FEFF 		bl	EZI2C_1_GetActivity
 233 0136 0346     		mov	r3, r0
 234 0138 87F84630 		strb	r3, [r7, #70]
 117:.\main.c      ****             if(~(tempStatus && EZI2C_1_STATUS_BUSY)) //Check to make sure that NAND is the right ch
 118:.\main.c      ****             {
 119:.\main.c      ****             //set data into i2c transmit buffer
 120:.\main.c      ****                 for(i = 0;i<6;i++)
 235              		.loc 1 120 0
 236 013c 0023     		movs	r3, #0
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 8


 237 013e BB64     		str	r3, [r7, #72]
 238 0140 1DE0     		b	.L15
 239              	.L16:
 121:.\main.c      ****                 {
 122:.\main.c      ****                 i2cBuffer[2*i] = lowByte[i];
 240              		.loc 1 122 0 discriminator 3
 241 0142 BB6C     		ldr	r3, [r7, #72]
 242 0144 5B00     		lsls	r3, r3, #1
 243 0146 07F12401 		add	r1, r7, #36
 244 014a BA6C     		ldr	r2, [r7, #72]
 245 014c 0A44     		add	r2, r2, r1
 246 014e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 247 0150 D2B2     		uxtb	r2, r2
 248 0152 07F15001 		add	r1, r7, #80
 249 0156 0B44     		add	r3, r3, r1
 250 0158 03F8402C 		strb	r2, [r3, #-64]
 123:.\main.c      ****                 i2cBuffer[2*i+1] = highByte[i];
 251              		.loc 1 123 0 discriminator 3
 252 015c BB6C     		ldr	r3, [r7, #72]
 253 015e 5B00     		lsls	r3, r3, #1
 254 0160 0133     		adds	r3, r3, #1
 255 0162 07F11C01 		add	r1, r7, #28
 256 0166 BA6C     		ldr	r2, [r7, #72]
 257 0168 0A44     		add	r2, r2, r1
 258 016a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 259 016c D2B2     		uxtb	r2, r2
 260 016e 07F15001 		add	r1, r7, #80
 261 0172 0B44     		add	r3, r3, r1
 262 0174 03F8402C 		strb	r2, [r3, #-64]
 120:.\main.c      ****                 {
 263              		.loc 1 120 0 discriminator 3
 264 0178 BB6C     		ldr	r3, [r7, #72]
 265 017a 0133     		adds	r3, r3, #1
 266 017c BB64     		str	r3, [r7, #72]
 267              	.L15:
 120:.\main.c      ****                 {
 268              		.loc 1 120 0 is_stmt 0 discriminator 1
 269 017e BB6C     		ldr	r3, [r7, #72]
 270 0180 052B     		cmp	r3, #5
 271 0182 DEDD     		ble	.L16
 124:.\main.c      ****                 }
 125:.\main.c      ****             }
 126:.\main.c      ****             /* Send data based on last UART command */
 127:.\main.c      ****             if(SendSingleByte || ContinuouslySendData)
 272              		.loc 1 127 0 is_stmt 1
 273 0184 97F84D30 		ldrb	r3, [r7, #77]	@ zero_extendqisi2
 274 0188 002B     		cmp	r3, #0
 275 018a 03D1     		bne	.L17
 276              		.loc 1 127 0 is_stmt 0 discriminator 1
 277 018c 97F84E30 		ldrb	r3, [r7, #78]	@ zero_extendqisi2
 278 0190 002B     		cmp	r3, #0
 279 0192 45D0     		beq	.L18
 280              	.L17:
 128:.\main.c      ****             {
 129:.\main.c      ****                 /* Format ADC result for transmition */
 130:.\main.c      ****                 sprintf(TransmitBuffer, "Overall: %ld mV\r\n", data[0]);
 281              		.loc 1 130 0 is_stmt 1
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 9


 282 0194 FB6A     		ldr	r3, [r7, #44]
 283 0196 3A46     		mov	r2, r7
 284 0198 1046     		mov	r0, r2
 285 019a 2F49     		ldr	r1, .L21+4
 286 019c 1A46     		mov	r2, r3
 287 019e FFF7FEFF 		bl	sprintf
 131:.\main.c      ****                 /* Send out the data */
 132:.\main.c      ****                 UART_1_PutString(TransmitBuffer);
 288              		.loc 1 132 0
 289 01a2 3B46     		mov	r3, r7
 290 01a4 1846     		mov	r0, r3
 291 01a6 FFF7FEFF 		bl	UART_1_PutString
 133:.\main.c      ****                 
 134:.\main.c      ****                 sprintf(TransmitBuffer, "Production: %ld mV\r\n", data[1]);
 292              		.loc 1 134 0
 293 01aa 3B6B     		ldr	r3, [r7, #48]
 294 01ac 3A46     		mov	r2, r7
 295 01ae 1046     		mov	r0, r2
 296 01b0 2A49     		ldr	r1, .L21+8
 297 01b2 1A46     		mov	r2, r3
 298 01b4 FFF7FEFF 		bl	sprintf
 135:.\main.c      ****                 UART_1_PutString(TransmitBuffer);      
 299              		.loc 1 135 0
 300 01b8 3B46     		mov	r3, r7
 301 01ba 1846     		mov	r0, r3
 302 01bc FFF7FEFF 		bl	UART_1_PutString
 136:.\main.c      ****                 sprintf(TransmitBuffer, "Fpump: %ld mV\r\n", data[2]);
 303              		.loc 1 136 0
 304 01c0 7B6B     		ldr	r3, [r7, #52]
 305 01c2 3A46     		mov	r2, r7
 306 01c4 1046     		mov	r0, r2
 307 01c6 2649     		ldr	r1, .L21+12
 308 01c8 1A46     		mov	r2, r3
 309 01ca FFF7FEFF 		bl	sprintf
 137:.\main.c      ****                 UART_1_PutString(TransmitBuffer);                  
 310              		.loc 1 137 0
 311 01ce 3B46     		mov	r3, r7
 312 01d0 1846     		mov	r0, r3
 313 01d2 FFF7FEFF 		bl	UART_1_PutString
 138:.\main.c      ****                 sprintf(TransmitBuffer, "Finj: %ld mV\r\n", data[3]);
 314              		.loc 1 138 0
 315 01d6 BB6B     		ldr	r3, [r7, #56]
 316 01d8 3A46     		mov	r2, r7
 317 01da 1046     		mov	r0, r2
 318 01dc 2149     		ldr	r1, .L21+16
 319 01de 1A46     		mov	r2, r3
 320 01e0 FFF7FEFF 		bl	sprintf
 139:.\main.c      ****                 UART_1_PutString(TransmitBuffer);                 
 321              		.loc 1 139 0
 322 01e4 3B46     		mov	r3, r7
 323 01e6 1846     		mov	r0, r3
 324 01e8 FFF7FEFF 		bl	UART_1_PutString
 140:.\main.c      ****                 sprintf(TransmitBuffer, "Ignition: %ld mV\r\n", data[4]);
 325              		.loc 1 140 0
 326 01ec FB6B     		ldr	r3, [r7, #60]
 327 01ee 3A46     		mov	r2, r7
 328 01f0 1046     		mov	r0, r2
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 10


 329 01f2 1D49     		ldr	r1, .L21+20
 330 01f4 1A46     		mov	r2, r3
 331 01f6 FFF7FEFF 		bl	sprintf
 141:.\main.c      ****                 UART_1_PutString(TransmitBuffer);                   
 332              		.loc 1 141 0
 333 01fa 3B46     		mov	r3, r7
 334 01fc 1846     		mov	r0, r3
 335 01fe FFF7FEFF 		bl	UART_1_PutString
 142:.\main.c      ****                 sprintf(TransmitBuffer, "RefV: %ld mV\r\n\n\n\n\n\n\r", data[5]);
 336              		.loc 1 142 0
 337 0202 3B6C     		ldr	r3, [r7, #64]
 338 0204 3A46     		mov	r2, r7
 339 0206 1046     		mov	r0, r2
 340 0208 1849     		ldr	r1, .L21+24
 341 020a 1A46     		mov	r2, r3
 342 020c FFF7FEFF 		bl	sprintf
 143:.\main.c      ****                 UART_1_PutString(TransmitBuffer);                   
 343              		.loc 1 143 0
 344 0210 3B46     		mov	r3, r7
 345 0212 1846     		mov	r0, r3
 346 0214 FFF7FEFF 		bl	UART_1_PutString
 144:.\main.c      ****                 /* Reset the send once flag */
 145:.\main.c      ****                 SendSingleByte = FALSE;
 347              		.loc 1 145 0
 348 0218 0023     		movs	r3, #0
 349 021a 87F84D30 		strb	r3, [r7, #77]
 350 021e 17E0     		b	.L12
 351              	.L18:
 146:.\main.c      ****             }
 147:.\main.c      ****             else if(SendEmulatedData)
 352              		.loc 1 147 0
 353 0220 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 354 0224 002B     		cmp	r3, #0
 355 0226 13D0     		beq	.L12
 148:.\main.c      ****             {
 149:.\main.c      ****                 /* Format ADC result for transmition */
 150:.\main.c      ****                 sprintf(TransmitBuffer, "Emulated Data: %x \r\n", EmulatedData);
 356              		.loc 1 150 0
 357 0228 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 358 022c 3A46     		mov	r2, r7
 359 022e 1046     		mov	r0, r2
 360 0230 0F49     		ldr	r1, .L21+28
 361 0232 1A46     		mov	r2, r3
 362 0234 FFF7FEFF 		bl	sprintf
 151:.\main.c      ****                 /* Send out the data */
 152:.\main.c      ****                 UART_1_PutString(TransmitBuffer);
 363              		.loc 1 152 0
 364 0238 3B46     		mov	r3, r7
 365 023a 1846     		mov	r0, r3
 366 023c FFF7FEFF 		bl	UART_1_PutString
 153:.\main.c      ****                 EmulatedData++;
 367              		.loc 1 153 0
 368 0240 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 369 0244 0133     		adds	r3, r3, #1
 370 0246 87F84F30 		strb	r3, [r7, #79]
 154:.\main.c      ****                 /* Reset the send once flag */
 155:.\main.c      ****                 SendEmulatedData = FALSE;   
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 11


 371              		.loc 1 155 0
 372 024a 0023     		movs	r3, #0
 373 024c 87F84C30 		strb	r3, [r7, #76]
 374              	.L12:
 156:.\main.c      ****             }
 157:.\main.c      ****         }
 158:.\main.c      ****     }
 375              		.loc 1 158 0
 376 0250 F7E6     		b	.L19
 377              	.L22:
 378 0252 00BF     		.align	2
 379              	.L21:
 380 0254 00000000 		.word	.LC0
 381 0258 10000000 		.word	.LC1
 382 025c 24000000 		.word	.LC2
 383 0260 3C000000 		.word	.LC3
 384 0264 4C000000 		.word	.LC4
 385 0268 5C000000 		.word	.LC5
 386 026c 70000000 		.word	.LC6
 387 0270 88000000 		.word	.LC7
 388              		.cfi_endproc
 389              	.LFE63:
 390              		.size	main, .-main
 391              		.text
 392              	.Letext0:
 393              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 394              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 395              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 396              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 397              		.section	.debug_info,"",%progbits
 398              	.Ldebug_info0:
 399 0000 E2010000 		.4byte	0x1e2
 400 0004 0400     		.2byte	0x4
 401 0006 00000000 		.4byte	.Ldebug_abbrev0
 402 000a 04       		.byte	0x4
 403 000b 01       		.uleb128 0x1
 404 000c 33000000 		.4byte	.LASF30
 405 0010 01       		.byte	0x1
 406 0011 DA000000 		.4byte	.LASF31
 407 0015 BD010000 		.4byte	.LASF32
 408 0019 00000000 		.4byte	.Ldebug_ranges0+0
 409 001d 00000000 		.4byte	0
 410 0021 00000000 		.4byte	.Ldebug_line0
 411 0025 02       		.uleb128 0x2
 412 0026 01       		.byte	0x1
 413 0027 06       		.byte	0x6
 414 0028 1B020000 		.4byte	.LASF0
 415 002c 02       		.uleb128 0x2
 416 002d 01       		.byte	0x1
 417 002e 08       		.byte	0x8
 418 002f CC000000 		.4byte	.LASF1
 419 0033 02       		.uleb128 0x2
 420 0034 02       		.byte	0x2
 421 0035 05       		.byte	0x5
 422 0036 A4010000 		.4byte	.LASF2
 423 003a 02       		.uleb128 0x2
 424 003b 02       		.byte	0x2
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 12


 425 003c 07       		.byte	0x7
 426 003d 27020000 		.4byte	.LASF3
 427 0041 03       		.uleb128 0x3
 428 0042 0D000000 		.4byte	.LASF9
 429 0046 02       		.byte	0x2
 430 0047 3F       		.byte	0x3f
 431 0048 4C000000 		.4byte	0x4c
 432 004c 02       		.uleb128 0x2
 433 004d 04       		.byte	0x4
 434 004e 05       		.byte	0x5
 435 004f B4010000 		.4byte	.LASF4
 436 0053 02       		.uleb128 0x2
 437 0054 04       		.byte	0x4
 438 0055 07       		.byte	0x7
 439 0056 E9000000 		.4byte	.LASF5
 440 005a 02       		.uleb128 0x2
 441 005b 08       		.byte	0x8
 442 005c 05       		.byte	0x5
 443 005d 86010000 		.4byte	.LASF6
 444 0061 02       		.uleb128 0x2
 445 0062 08       		.byte	0x8
 446 0063 07       		.byte	0x7
 447 0064 47010000 		.4byte	.LASF7
 448 0068 04       		.uleb128 0x4
 449 0069 04       		.byte	0x4
 450 006a 05       		.byte	0x5
 451 006b 696E7400 		.ascii	"int\000"
 452 006f 02       		.uleb128 0x2
 453 0070 04       		.byte	0x4
 454 0071 07       		.byte	0x7
 455 0072 3A010000 		.4byte	.LASF8
 456 0076 03       		.uleb128 0x3
 457 0077 66010000 		.4byte	.LASF10
 458 007b 03       		.byte	0x3
 459 007c 2C       		.byte	0x2c
 460 007d 41000000 		.4byte	0x41
 461 0081 03       		.uleb128 0x3
 462 0082 AE010000 		.4byte	.LASF11
 463 0086 04       		.byte	0x4
 464 0087 C2       		.byte	0xc2
 465 0088 2C000000 		.4byte	0x2c
 466 008c 03       		.uleb128 0x3
 467 008d 35010000 		.4byte	.LASF12
 468 0091 04       		.byte	0x4
 469 0092 C5       		.byte	0xc5
 470 0093 25000000 		.4byte	0x25
 471 0097 03       		.uleb128 0x3
 472 0098 E3000000 		.4byte	.LASF13
 473 009c 04       		.byte	0x4
 474 009d C6       		.byte	0xc6
 475 009e 33000000 		.4byte	0x33
 476 00a2 03       		.uleb128 0x3
 477 00a3 FB000000 		.4byte	.LASF14
 478 00a7 04       		.byte	0x4
 479 00a8 C7       		.byte	0xc7
 480 00a9 4C000000 		.4byte	0x4c
 481 00ad 02       		.uleb128 0x2
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 13


 482 00ae 04       		.byte	0x4
 483 00af 04       		.byte	0x4
 484 00b0 C1000000 		.4byte	.LASF15
 485 00b4 02       		.uleb128 0x2
 486 00b5 08       		.byte	0x8
 487 00b6 04       		.byte	0x4
 488 00b7 29010000 		.4byte	.LASF16
 489 00bb 02       		.uleb128 0x2
 490 00bc 01       		.byte	0x1
 491 00bd 08       		.byte	0x8
 492 00be 94010000 		.4byte	.LASF17
 493 00c2 02       		.uleb128 0x2
 494 00c3 04       		.byte	0x4
 495 00c4 07       		.byte	0x7
 496 00c5 7D010000 		.4byte	.LASF18
 497 00c9 05       		.uleb128 0x5
 498 00ca 30010000 		.4byte	.LASF33
 499 00ce 01       		.byte	0x1
 500 00cf 18       		.byte	0x18
 501 00d0 00000000 		.4byte	.LFB63
 502 00d4 74020000 		.4byte	.LFE63-.LFB63
 503 00d8 01       		.uleb128 0x1
 504 00d9 9C       		.byte	0x9c
 505 00da 94010000 		.4byte	0x194
 506 00de 06       		.uleb128 0x6
 507 00df 17000000 		.4byte	.LASF19
 508 00e3 01       		.byte	0x1
 509 00e4 1B       		.byte	0x1b
 510 00e5 97000000 		.4byte	0x97
 511 00e9 02       		.uleb128 0x2
 512 00ea 91       		.byte	0x91
 513 00eb 6C       		.sleb128 -20
 514 00ec 06       		.uleb128 0x6
 515 00ed C7000000 		.4byte	.LASF20
 516 00f1 01       		.byte	0x1
 517 00f2 1C       		.byte	0x1c
 518 00f3 94010000 		.4byte	0x194
 519 00f7 02       		.uleb128 0x2
 520 00f8 91       		.byte	0x91
 521 00f9 54       		.sleb128 -44
 522 00fa 06       		.uleb128 0x6
 523 00fb 5E010000 		.4byte	.LASF21
 524 00ff 01       		.byte	0x1
 525 0100 1D       		.byte	0x1d
 526 0101 A4010000 		.4byte	0x1a4
 527 0105 02       		.uleb128 0x2
 528 0106 91       		.byte	0x91
 529 0107 4C       		.sleb128 -52
 530 0108 06       		.uleb128 0x6
 531 0109 3A020000 		.4byte	.LASF22
 532 010d 01       		.byte	0x1
 533 010e 1E       		.byte	0x1e
 534 010f A4010000 		.4byte	0x1a4
 535 0113 02       		.uleb128 0x2
 536 0114 91       		.byte	0x91
 537 0115 44       		.sleb128 -60
 538 0116 07       		.uleb128 0x7
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 14


 539 0117 436800   		.ascii	"Ch\000"
 540 011a 01       		.byte	0x1
 541 011b 20       		.byte	0x20
 542 011c 81000000 		.4byte	0x81
 543 0120 02       		.uleb128 0x2
 544 0121 91       		.byte	0x91
 545 0122 6F       		.sleb128 -17
 546 0123 06       		.uleb128 0x6
 547 0124 00000000 		.4byte	.LASF23
 548 0128 01       		.byte	0x1
 549 0129 22       		.byte	0x22
 550 012a 81000000 		.4byte	0x81
 551 012e 02       		.uleb128 0x2
 552 012f 91       		.byte	0x91
 553 0130 77       		.sleb128 -9
 554 0131 06       		.uleb128 0x6
 555 0132 1E000000 		.4byte	.LASF24
 556 0136 01       		.byte	0x1
 557 0137 24       		.byte	0x24
 558 0138 81000000 		.4byte	0x81
 559 013c 02       		.uleb128 0x2
 560 013d 91       		.byte	0x91
 561 013e 76       		.sleb128 -10
 562 013f 06       		.uleb128 0x6
 563 0140 43020000 		.4byte	.LASF25
 564 0144 01       		.byte	0x1
 565 0145 25       		.byte	0x25
 566 0146 81000000 		.4byte	0x81
 567 014a 02       		.uleb128 0x2
 568 014b 91       		.byte	0x91
 569 014c 75       		.sleb128 -11
 570 014d 06       		.uleb128 0x6
 571 014e 18010000 		.4byte	.LASF26
 572 0152 01       		.byte	0x1
 573 0153 26       		.byte	0x26
 574 0154 81000000 		.4byte	0x81
 575 0158 02       		.uleb128 0x2
 576 0159 91       		.byte	0x91
 577 015a 74       		.sleb128 -12
 578 015b 06       		.uleb128 0x6
 579 015c 01010000 		.4byte	.LASF27
 580 0160 01       		.byte	0x1
 581 0161 28       		.byte	0x28
 582 0162 B4010000 		.4byte	0x1b4
 583 0166 03       		.uleb128 0x3
 584 0167 91       		.byte	0x91
 585 0168 B87F     		.sleb128 -72
 586 016a 06       		.uleb128 0x6
 587 016b 99010000 		.4byte	.LASF28
 588 016f 01       		.byte	0x1
 589 0170 29       		.byte	0x29
 590 0171 81000000 		.4byte	0x81
 591 0175 02       		.uleb128 0x2
 592 0176 91       		.byte	0x91
 593 0177 6E       		.sleb128 -18
 594 0178 06       		.uleb128 0x6
 595 0179 6E010000 		.4byte	.LASF29
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 15


 596 017d 01       		.byte	0x1
 597 017e 2B       		.byte	0x2b
 598 017f C4010000 		.4byte	0x1c4
 599 0183 03       		.uleb128 0x3
 600 0184 91       		.byte	0x91
 601 0185 A87F     		.sleb128 -88
 602 0187 07       		.uleb128 0x7
 603 0188 6900     		.ascii	"i\000"
 604 018a 01       		.byte	0x1
 605 018b 2E       		.byte	0x2e
 606 018c 68000000 		.4byte	0x68
 607 0190 02       		.uleb128 0x2
 608 0191 91       		.byte	0x91
 609 0192 70       		.sleb128 -16
 610 0193 00       		.byte	0
 611 0194 08       		.uleb128 0x8
 612 0195 A2000000 		.4byte	0xa2
 613 0199 A4010000 		.4byte	0x1a4
 614 019d 09       		.uleb128 0x9
 615 019e C2000000 		.4byte	0xc2
 616 01a2 05       		.byte	0x5
 617 01a3 00       		.byte	0
 618 01a4 08       		.uleb128 0x8
 619 01a5 8C000000 		.4byte	0x8c
 620 01a9 B4010000 		.4byte	0x1b4
 621 01ad 09       		.uleb128 0x9
 622 01ae C2000000 		.4byte	0xc2
 623 01b2 05       		.byte	0x5
 624 01b3 00       		.byte	0
 625 01b4 08       		.uleb128 0x8
 626 01b5 81000000 		.4byte	0x81
 627 01b9 C4010000 		.4byte	0x1c4
 628 01bd 09       		.uleb128 0x9
 629 01be C2000000 		.4byte	0xc2
 630 01c2 0B       		.byte	0xb
 631 01c3 00       		.byte	0
 632 01c4 08       		.uleb128 0x8
 633 01c5 BB000000 		.4byte	0xbb
 634 01c9 D4010000 		.4byte	0x1d4
 635 01cd 09       		.uleb128 0x9
 636 01ce C2000000 		.4byte	0xc2
 637 01d2 0F       		.byte	0xf
 638 01d3 00       		.byte	0
 639 01d4 0A       		.uleb128 0xa
 640 01d5 0B010000 		.4byte	.LASF34
 641 01d9 05       		.byte	0x5
 642 01da 2A06     		.2byte	0x62a
 643 01dc E0010000 		.4byte	0x1e0
 644 01e0 0B       		.uleb128 0xb
 645 01e1 76000000 		.4byte	0x76
 646 01e5 00       		.byte	0
 647              		.section	.debug_abbrev,"",%progbits
 648              	.Ldebug_abbrev0:
 649 0000 01       		.uleb128 0x1
 650 0001 11       		.uleb128 0x11
 651 0002 01       		.byte	0x1
 652 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 16


 653 0004 0E       		.uleb128 0xe
 654 0005 13       		.uleb128 0x13
 655 0006 0B       		.uleb128 0xb
 656 0007 03       		.uleb128 0x3
 657 0008 0E       		.uleb128 0xe
 658 0009 1B       		.uleb128 0x1b
 659 000a 0E       		.uleb128 0xe
 660 000b 55       		.uleb128 0x55
 661 000c 17       		.uleb128 0x17
 662 000d 11       		.uleb128 0x11
 663 000e 01       		.uleb128 0x1
 664 000f 10       		.uleb128 0x10
 665 0010 17       		.uleb128 0x17
 666 0011 00       		.byte	0
 667 0012 00       		.byte	0
 668 0013 02       		.uleb128 0x2
 669 0014 24       		.uleb128 0x24
 670 0015 00       		.byte	0
 671 0016 0B       		.uleb128 0xb
 672 0017 0B       		.uleb128 0xb
 673 0018 3E       		.uleb128 0x3e
 674 0019 0B       		.uleb128 0xb
 675 001a 03       		.uleb128 0x3
 676 001b 0E       		.uleb128 0xe
 677 001c 00       		.byte	0
 678 001d 00       		.byte	0
 679 001e 03       		.uleb128 0x3
 680 001f 16       		.uleb128 0x16
 681 0020 00       		.byte	0
 682 0021 03       		.uleb128 0x3
 683 0022 0E       		.uleb128 0xe
 684 0023 3A       		.uleb128 0x3a
 685 0024 0B       		.uleb128 0xb
 686 0025 3B       		.uleb128 0x3b
 687 0026 0B       		.uleb128 0xb
 688 0027 49       		.uleb128 0x49
 689 0028 13       		.uleb128 0x13
 690 0029 00       		.byte	0
 691 002a 00       		.byte	0
 692 002b 04       		.uleb128 0x4
 693 002c 24       		.uleb128 0x24
 694 002d 00       		.byte	0
 695 002e 0B       		.uleb128 0xb
 696 002f 0B       		.uleb128 0xb
 697 0030 3E       		.uleb128 0x3e
 698 0031 0B       		.uleb128 0xb
 699 0032 03       		.uleb128 0x3
 700 0033 08       		.uleb128 0x8
 701 0034 00       		.byte	0
 702 0035 00       		.byte	0
 703 0036 05       		.uleb128 0x5
 704 0037 2E       		.uleb128 0x2e
 705 0038 01       		.byte	0x1
 706 0039 3F       		.uleb128 0x3f
 707 003a 19       		.uleb128 0x19
 708 003b 03       		.uleb128 0x3
 709 003c 0E       		.uleb128 0xe
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 17


 710 003d 3A       		.uleb128 0x3a
 711 003e 0B       		.uleb128 0xb
 712 003f 3B       		.uleb128 0x3b
 713 0040 0B       		.uleb128 0xb
 714 0041 11       		.uleb128 0x11
 715 0042 01       		.uleb128 0x1
 716 0043 12       		.uleb128 0x12
 717 0044 06       		.uleb128 0x6
 718 0045 40       		.uleb128 0x40
 719 0046 18       		.uleb128 0x18
 720 0047 9642     		.uleb128 0x2116
 721 0049 19       		.uleb128 0x19
 722 004a 01       		.uleb128 0x1
 723 004b 13       		.uleb128 0x13
 724 004c 00       		.byte	0
 725 004d 00       		.byte	0
 726 004e 06       		.uleb128 0x6
 727 004f 34       		.uleb128 0x34
 728 0050 00       		.byte	0
 729 0051 03       		.uleb128 0x3
 730 0052 0E       		.uleb128 0xe
 731 0053 3A       		.uleb128 0x3a
 732 0054 0B       		.uleb128 0xb
 733 0055 3B       		.uleb128 0x3b
 734 0056 0B       		.uleb128 0xb
 735 0057 49       		.uleb128 0x49
 736 0058 13       		.uleb128 0x13
 737 0059 02       		.uleb128 0x2
 738 005a 18       		.uleb128 0x18
 739 005b 00       		.byte	0
 740 005c 00       		.byte	0
 741 005d 07       		.uleb128 0x7
 742 005e 34       		.uleb128 0x34
 743 005f 00       		.byte	0
 744 0060 03       		.uleb128 0x3
 745 0061 08       		.uleb128 0x8
 746 0062 3A       		.uleb128 0x3a
 747 0063 0B       		.uleb128 0xb
 748 0064 3B       		.uleb128 0x3b
 749 0065 0B       		.uleb128 0xb
 750 0066 49       		.uleb128 0x49
 751 0067 13       		.uleb128 0x13
 752 0068 02       		.uleb128 0x2
 753 0069 18       		.uleb128 0x18
 754 006a 00       		.byte	0
 755 006b 00       		.byte	0
 756 006c 08       		.uleb128 0x8
 757 006d 01       		.uleb128 0x1
 758 006e 01       		.byte	0x1
 759 006f 49       		.uleb128 0x49
 760 0070 13       		.uleb128 0x13
 761 0071 01       		.uleb128 0x1
 762 0072 13       		.uleb128 0x13
 763 0073 00       		.byte	0
 764 0074 00       		.byte	0
 765 0075 09       		.uleb128 0x9
 766 0076 21       		.uleb128 0x21
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 18


 767 0077 00       		.byte	0
 768 0078 49       		.uleb128 0x49
 769 0079 13       		.uleb128 0x13
 770 007a 2F       		.uleb128 0x2f
 771 007b 0B       		.uleb128 0xb
 772 007c 00       		.byte	0
 773 007d 00       		.byte	0
 774 007e 0A       		.uleb128 0xa
 775 007f 34       		.uleb128 0x34
 776 0080 00       		.byte	0
 777 0081 03       		.uleb128 0x3
 778 0082 0E       		.uleb128 0xe
 779 0083 3A       		.uleb128 0x3a
 780 0084 0B       		.uleb128 0xb
 781 0085 3B       		.uleb128 0x3b
 782 0086 05       		.uleb128 0x5
 783 0087 49       		.uleb128 0x49
 784 0088 13       		.uleb128 0x13
 785 0089 3F       		.uleb128 0x3f
 786 008a 19       		.uleb128 0x19
 787 008b 3C       		.uleb128 0x3c
 788 008c 19       		.uleb128 0x19
 789 008d 00       		.byte	0
 790 008e 00       		.byte	0
 791 008f 0B       		.uleb128 0xb
 792 0090 35       		.uleb128 0x35
 793 0091 00       		.byte	0
 794 0092 49       		.uleb128 0x49
 795 0093 13       		.uleb128 0x13
 796 0094 00       		.byte	0
 797 0095 00       		.byte	0
 798 0096 00       		.byte	0
 799              		.section	.debug_aranges,"",%progbits
 800 0000 1C000000 		.4byte	0x1c
 801 0004 0200     		.2byte	0x2
 802 0006 00000000 		.4byte	.Ldebug_info0
 803 000a 04       		.byte	0x4
 804 000b 00       		.byte	0
 805 000c 0000     		.2byte	0
 806 000e 0000     		.2byte	0
 807 0010 00000000 		.4byte	.LFB63
 808 0014 74020000 		.4byte	.LFE63-.LFB63
 809 0018 00000000 		.4byte	0
 810 001c 00000000 		.4byte	0
 811              		.section	.debug_ranges,"",%progbits
 812              	.Ldebug_ranges0:
 813 0000 00000000 		.4byte	.LFB63
 814 0004 74020000 		.4byte	.LFE63
 815 0008 00000000 		.4byte	0
 816 000c 00000000 		.4byte	0
 817              		.section	.debug_line,"",%progbits
 818              	.Ldebug_line0:
 819 0000 E8010000 		.section	.debug_str,"MS",%progbits,1
 819      02004901 
 819      00000201 
 819      FB0E0D00 
 819      01010101 
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 19


 820              	.LASF23:
 821 0000 456D756C 		.ascii	"EmulatedData\000"
 821      61746564 
 821      44617461 
 821      00
 822              	.LASF9:
 823 000d 5F5F696E 		.ascii	"__int32_t\000"
 823      7433325F 
 823      7400
 824              	.LASF19:
 825 0017 4F757470 		.ascii	"Output\000"
 825      757400
 826              	.LASF24:
 827 001e 436F6E74 		.ascii	"ContinuouslySendData\000"
 827      696E756F 
 827      75736C79 
 827      53656E64 
 827      44617461 
 828              	.LASF30:
 829 0033 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 829      4320342E 
 829      392E3320 
 829      32303135 
 829      30333033 
 830 0066 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 830      20726576 
 830      6973696F 
 830      6E203232 
 830      31323230 
 831 0099 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 831      66756E63 
 831      74696F6E 
 831      2D736563 
 831      74696F6E 
 832              	.LASF15:
 833 00c1 666C6F61 		.ascii	"float\000"
 833      7400
 834              	.LASF20:
 835 00c7 64617461 		.ascii	"data\000"
 835      00
 836              	.LASF1:
 837 00cc 756E7369 		.ascii	"unsigned char\000"
 837      676E6564 
 837      20636861 
 837      7200
 838              	.LASF31:
 839 00da 2E5C6D61 		.ascii	".\\main.c\000"
 839      696E2E63 
 839      00
 840              	.LASF13:
 841 00e3 696E7431 		.ascii	"int16\000"
 841      3600
 842              	.LASF5:
 843 00e9 6C6F6E67 		.ascii	"long unsigned int\000"
 843      20756E73 
 843      69676E65 
 843      6420696E 
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 20


 843      7400
 844              	.LASF14:
 845 00fb 696E7433 		.ascii	"int32\000"
 845      3200
 846              	.LASF27:
 847 0101 69326342 		.ascii	"i2cBuffer\000"
 847      75666665 
 847      7200
 848              	.LASF34:
 849 010b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 849      52784275 
 849      66666572 
 849      00
 850              	.LASF26:
 851 0118 53656E64 		.ascii	"SendEmulatedData\000"
 851      456D756C 
 851      61746564 
 851      44617461 
 851      00
 852              	.LASF16:
 853 0129 646F7562 		.ascii	"double\000"
 853      6C6500
 854              	.LASF33:
 855 0130 6D61696E 		.ascii	"main\000"
 855      00
 856              	.LASF12:
 857 0135 696E7438 		.ascii	"int8\000"
 857      00
 858              	.LASF8:
 859 013a 756E7369 		.ascii	"unsigned int\000"
 859      676E6564 
 859      20696E74 
 859      00
 860              	.LASF7:
 861 0147 6C6F6E67 		.ascii	"long long unsigned int\000"
 861      206C6F6E 
 861      6720756E 
 861      7369676E 
 861      65642069 
 862              	.LASF21:
 863 015e 6C6F7742 		.ascii	"lowByte\000"
 863      79746500 
 864              	.LASF10:
 865 0166 696E7433 		.ascii	"int32_t\000"
 865      325F7400 
 866              	.LASF29:
 867 016e 5472616E 		.ascii	"TransmitBuffer\000"
 867      736D6974 
 867      42756666 
 867      657200
 868              	.LASF18:
 869 017d 73697A65 		.ascii	"sizetype\000"
 869      74797065 
 869      00
 870              	.LASF6:
 871 0186 6C6F6E67 		.ascii	"long long int\000"
 871      206C6F6E 
ARM GAS  C:\Users\Charlie\AppData\Local\Temp\cc0HLg2x.s 			page 21


 871      6720696E 
 871      7400
 872              	.LASF17:
 873 0194 63686172 		.ascii	"char\000"
 873      00
 874              	.LASF28:
 875 0199 74656D70 		.ascii	"tempStatus\000"
 875      53746174 
 875      757300
 876              	.LASF2:
 877 01a4 73686F72 		.ascii	"short int\000"
 877      7420696E 
 877      7400
 878              	.LASF11:
 879 01ae 75696E74 		.ascii	"uint8\000"
 879      3800
 880              	.LASF4:
 881 01b4 6C6F6E67 		.ascii	"long int\000"
 881      20696E74 
 881      00
 882              	.LASF32:
 883 01bd 443A5C44 		.ascii	"D:\\Documents\\Virginia_Tech\\FSAE\\VTM-DAQ\\VTM16 "
 883      6F63756D 
 883      656E7473 
 883      5C566972 
 883      67696E69 
 884 01eb 50534F43 		.ascii	"PSOC Current Sensor\\VTM16 Current Sensors.cydsn\000"
 884      20437572 
 884      72656E74 
 884      2053656E 
 884      736F725C 
 885              	.LASF0:
 886 021b 7369676E 		.ascii	"signed char\000"
 886      65642063 
 886      68617200 
 887              	.LASF3:
 888 0227 73686F72 		.ascii	"short unsigned int\000"
 888      7420756E 
 888      7369676E 
 888      65642069 
 888      6E7400
 889              	.LASF22:
 890 023a 68696768 		.ascii	"highByte\000"
 890      42797465 
 890      00
 891              	.LASF25:
 892 0243 53656E64 		.ascii	"SendSingleByte\000"
 892      53696E67 
 892      6C654279 
 892      746500
 893              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
